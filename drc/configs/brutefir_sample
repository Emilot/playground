## DEFAULT GENERAL SETTINGS ##

float_bits: 64;             # internal floating point precision
sampling_rate: 44100;       # sampling rate in Hz of audio interfaces
filter_length: 4096,16;       # length of filters
config_file: "~/.brutefir_config"; # standard location of main config file
overflow_warnings: true;    # echo warnings to stderr if overflow occurs
show_progress: false;        # echo filtering progress to stderr
max_dither_table_size: 0;   # maximum size in bytes of precalculated dither
allow_poll_mode: false;     # allow use of input poll mode
modules_path: ".";          # extra path where to find BruteFIR modules
monitor_rate: false;        # monitor sample rate
powersave: false;           # pause filtering when input is zero
lock_memory: true;          # try to lock memory if realtime prio is set
sdf_length: -1;             # subsample filter half length in samples
safety_limit: 20;           # if non-zero max dB in output before aborting
convolver_config: "~/.brutefir_convolver"; # location of convolver config file



## COEFF DEFAULTS ##

coeff "c-l" {
   filename: "/Pfad/zu/Acorate-Filter-links.dbl";
   format: "FLOAT64_LE";
};

coeff "c-r" {
   filename: "/Pfad/zu/Acorate-Filter-rechts.dbl";
   format: "FLOAT64_LE";
};


## INPUT DEFAULTS ##

input "leftin","rightin" {
   device: "file" { path: "/dev/stdin"; };  # module and parameters to get audio
   sample: "S32_LE";   # sample format
   channels: 2/0,1;    # number of open channels / which to use
   delay: 0,0;         # delay in samples for each channel
   maxdelay: -1;       # max delay for variable delays
   subdelay: 0,0;      # subsample delay in 1/100th sample for each channel
   mute: false,false;  # mute active on startup for each channel
};



## OUTPUT analog
#
output  "leftout", "rightout"  {
   device: "alsa" { device: "hw:1"; ignore_xrun: true; };
   sample: "S32_LE";  
   channels: 2;
   dither: true;
};

## FILTER DEFAULTS ##

filter "drc_l" {
   from_inputs: "leftin";
   to_outputs: "leftout";
   coeff: "c-l";
};

filter "drc_r" {
   from_inputs: "rightin";
   to_outputs: "rightout";
   coeff: "c-r";
};
